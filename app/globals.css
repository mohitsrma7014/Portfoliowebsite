@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 255, 255, 255;
  --background-start-rgb: 17, 24, 39;
  --background-end-rgb: 31, 41, 55;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(to bottom, transparent, rgb(var(--background-end-rgb))) rgb(var(--background-start-rgb));
  cursor: default; /* Ensure cursor visibility */
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Custom scrollbar styles */
::-webkit-scrollbar {
  width: 10px;
}

::-webkit-scrollbar-track {
  background: #1a202c;
}

::-webkit-scrollbar-thumb {
  background: #4a5568;
  border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
  background: #718096;
}

/* Glowing input effect */
.glow-input {
  box-shadow: 0 0 5px rgba(66, 153, 225, 0.5);
  transition: box-shadow 0.3s ease-in-out;
}

.glow-input:focus {
  box-shadow: 0 0 15px rgba(66, 153, 225, 0.8);
}

/* Ripple effect for buttons */
.ripple {
  position: relative;
  overflow: hidden;
}

.ripple:after {
  content: "";
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
  background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
  background-repeat: no-repeat;
  background-position: 50%;
  transform: scale(10, 10);
  opacity: 0;
  transition: transform 0.5s, opacity 1s;
}

.ripple:active:after {
  transform: scale(0, 0);
  opacity: 0.3;
  transition: 0s;
}

/* Floating animation for background icons */
@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0px);
  }
}

.floating-icon {
  animation: float 6s ease-in-out infinite;
}

/* Custom cursor styles */
.cursor {
  background-color: white;
  height: 32px;
  width: 32px;
  border-radius: 50%;
  position: fixed;
  top: 0;
  left: 0;
  pointer-events: none;
}

a,
button,
[role="button"],
input,
select,
textarea {
  cursor: pointer;
}

.text-input {
  cursor: text;
}

/* Add a subtle hover effect to interactive elements */
a:hover,
button:hover,
[role="button"]:hover {
  opacity: 0.8;
  transition: opacity 0.2s ease-in-out;
}

